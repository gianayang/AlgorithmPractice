//Find all numbers that appear in both of two sorted arrays (the two arrays are all sorted in ascending order).
public List<Integer> common(int[] A, int[] B) {
    // Write your solution here
    HashMap<Integer, Integer> hmap = new HashMap<>();
    HashMap<Integer,Integer> hmap2 = new HashMap<>();
    List<Integer> res=new ArrayList<>();
    for(int i=0;i < A.length;i++){
      Integer count = hmap.get(A[i]);
      if(count != null){
        hmap.put(A[i],count+1);
      }
      else{
        hmap.put(A[i],1);
      }
    }
    for(int i=0;i < B.length;i++){
      Integer count = hmap2.get(B[i]);
      if(count != null){
        hmap2.put(B[i],count+1);
      }
      else{
        hmap2.put(B[i],1);
      }
    }
    for(Map.Entry<Integer,Integer> entry: hmap.entrySet()){
      Integer valB = hmap2.get(entry.getKey());
      if(valB !=  null){
        int leastAppear = Math.min(entry.getValue(),valB);
        for(int i =0; i< leastAppear; i++){
          res.add(entry.getKey());
        }
      }
    }
    return res;
  }
